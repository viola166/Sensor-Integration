// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from async.djinni

#pragma once

#include <cstdint>
#include <memory>

namespace interaxon { namespace bridge {

class Action;

/** Wrapper around a platform-specific event loop. */
class EventLoop {
public:
    virtual ~EventLoop() {}

    /**
     * Posts an action to the event loop for processing on the next pass.
     * \param action The action to perform.
     */
    virtual void post(const std::shared_ptr<Action> & action) = 0;

    /**
     * Posts an action to the event loop for processing after the specified
     * delay in milliseconds has passed.
     * \param action The action to perform.
     * \caseparam{delayMilliseconds, delay_milliseconds, The time to wait before posting the action to the event loop for processing.}
     */
    virtual void post_delayed(const std::shared_ptr<Action> & action, int64_t delay_milliseconds) = 0;

    /** Cancel all pending actions. */
    virtual void cancel() = 0;
};

} }  // namespace interaxon::bridge
