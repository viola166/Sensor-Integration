// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from logging.djinni

#pragma once

#include "api/bridge_severity.h"
#include <string>
#include <utility>

namespace interaxon { namespace bridge {

/** A log message. */
struct LogPacket final {
    /**
     * Severity of this message.
     * \return The severity of this message.
     */
    Severity severity;
    /**
     * Denotes raw messages.
     *
     * Raw messages are generally short (one or two character) messages that can
     * be passed straight to the screen without any formatting or added
     * newlines. (We use this to reduce the noise level on some of our verbose
     * log mesages.)
     * \return \c true if this is a raw log message, \c false otherwise.
     */
    bool raw;
    /**
     * Human-readable, usually all-caps, tag for this message, e.g. "CONNECTOR"
     * or "DEVICE".
     * \return The message tag.
     */
    std::string tag;
    /**
     * Timestamp for this log, in seconds.
     * \return The timestamp of this log message.
     */
    double timestamp;
    /**
     * Content of this log message. Not newline-terminated; handlers should
     * provide their own line-based formatting.
     * \return The log message content.
     */
    std::string message;

    LogPacket(Severity severity_,
              bool raw_,
              std::string tag_,
              double timestamp_,
              std::string message_)
    : severity(std::move(severity_))
    , raw(std::move(raw_))
    , tag(std::move(tag_))
    , timestamp(std::move(timestamp_))
    , message(std::move(message_))
    {}
};

} }  // namespace interaxon::bridge
